#2345678901234567890123456789012345678901234567890123456789012345678901234567890
# SamesTopLib.bashenv

if [[ -z "$SAMESHOME" ]]
then
    >&2 echo "FATAL:  SAMESHOME is required, but was missing."
    exit 99
fi

#2345678901234567890123456789012345678901234567890123456789012345678901234567890
# Constants and Environment

readonly DataFormatFileExtension="scdf" # For "Sames CSV Data Format"

readonly SamesBin=$SAMESHOME/bin
readonly SamesSBin=$SAMESHOME/sbin
readonly SamesExamplesDs=$SAMESHOME/examples
readonly SamesTestDataDs=$SAMESHOME/testdata
readonly SamesTmpDataDs=$SAMESHOME/tmpdata
readonly SamesTopLibDs=$SAMESHOME/slib

source $SamesTopLibDs/SBinLib.bashenv

readonly StdLibName=SamesLib

KeptFileURLs="$SAMESHOME/InternetFileURLs.csv"

#2345678901234567890123456789012345678901234567890123456789012345678901234567890
# Procedures

getKeptFileURL() {
    local _fN="$1"
    # Note I'm going to just use split here and Presume the files will be
    # maintained with both filenames and URLs with NO embedded commas.
    # There are other ways, but it's not worth my bother at this time.
    result=$(grep "$_fN" $KeptFileURLs)
    if [[ -n $result ]]
    then
        echo -n $result | cut -d, -f1
        return 0
    fi
    >&2 echo "No such '$fN' file found in $KeptFileURLs."
    return 9
}

validateSubtype() {
    local libSubtype="$1"

    case "$libSubtype" in
    alternate)
        return 0
        ;;
    amateur)
        return 0
        ;;
    disfavored)
        return 0
        ;;
    naive)
        return 0
        ;;
    native)
        return 0
        ;;
    neophyte)
        return 0
        ;;
    numpy)
        return 0
        ;;
    old)
        return 0
        ;;
    older)
        return 0
        ;;
    oldereven)
        return 0
        ;;
    pandas)
        return 0
        ;;
    polars)
        return 0
        ;;
    spark)
        return 0
        ;;
    esac
    return 1
}

#2345678901234567890123456789012345678901234567890123456789012345678901234567890
# End of SamesTopLib.bashenv
